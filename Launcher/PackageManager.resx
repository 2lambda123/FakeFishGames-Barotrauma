<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        xhgAgDEGAGCMAQAYYwAAxhgAgDEGAGCMAQAYYwAAxhgAgDEGAGCMAQAYYwAAxhgAgDEGAGCMAQAYYwAA
        xhgAgDEGAGCMAQAYYwAAxhgAgDEGAGCMAQAYYwAAxhgAgDEGAGCMAQAYYwAAxhgAgDEGAGCMAQAYYwAA
        xhgAgDEGAGCMAQAYYwAAxhgAgDEGAGCMAQAYYwAAxhgAgDEGAGCMAQAYYwAAxhgAgDEGAGCMAQAYYwAA
        xhgAgDEGAGCMAQAYYwAAxhgAgDEGAGCMAQAYYwAAxhgAgDEGAGCMAQAYYwAAxhgAgDEGAGCMAQAYYwAA
        xhgAgDEGAGCMAQAYYwAAxhgAgDEGAGCMAQAYYwAAxhgAgDEGAGCMAQAYYwAAxhgAgDEGAGCMAQAYYwAA
        xhgAgDEGAGCMAQAYYwAAxhgAgDEGAGCMAQAYYwAAxhgAgDEGAGCMAQAYYwAAxhgAgDEGAGCMAQAYYwAA
        xhgAgDEGAGCMAQAYYwAAxhgAgDEGAGCMAQAYYwAAxhgAgDEGAGCMAQAYYwAAxhgAgDEGAGCMAQAYYwAA
        xhgAgDEGAGCMAQAYYwAAxhgAgDEGAGCMAQAYYwAAxhgAgDEGAGCMAQAYYwAAxhgAgDEGAGCMAQAYYwAA
        xhgAgDEGAGCMAQAYYwAAxhgAgDEGAGCMAQAYYwAAxhgAgDEGAGCMAQAYYwAAxhgAgDEGAGCMAQAYYwAA
        xhgAgDEGAGCMAQAYYwAAxhgAgDEGAGCMAQAYYwAAxhgAgDEGAGCMAQAYYwAAxhgAgDEGAGCMAQAYYwAA
        xhgAgDEGAGCMAQAYYwAAtj6f/wEIzWam3AHpbQAAAABJRU5ErkJggg==
</value>
  </data>
</root>